name: Java SideProj CI/CD

# 在推送到 develop 分支時觸發
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

# 定義工作流程中的作業
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 檢查出代碼
      - name: Check out code
        uses: actions/checkout@v3

      # 設置 JDK 環境
      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'  # 使用 Java 23 版本
          distribution: 'temurin'  # 使用 Eclipse Temurin 作為 JDK 發行版

      # 構建專案
      - name: Build with Maven
        run: mvn clean install

      # 確認 target 目錄中是否有生成的 JAR 檔案
      - name: List files in target
        run: ls -al target

      # 啟動 Redis 和應用容器
      - name: Start application and Redis using Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
          docker ps

      # 等待 Redis 完全啟動
      - name: Wait for Redis to be ready
        run: |
          for i in {1..10}; do
            nc -zv localhost 6379 && echo "Redis is ready!" && exit 0
            echo "Waiting for Redis..."
            sleep 5
          done
          echo "Redis did not start in time." && exit 1

      # 配置 Redis 密碼為環境變數
      - name: Set Redis Password Environment Variable
        run: echo "SPRING_REDIS_PASSWORD=123456" >> $GITHUB_ENV

      # 構建 Docker 映像
      - name: Build Docker image
        run: |
          docker-compose -f docker-compose.yml build

      # 構建和測試專案
      - name: Build and test with Maven
        run: mvn clean install

      # 停止並移除 Docker 容器
      - name: Tear down Docker Compose
        if: always()
        run: docker-compose -f docker-compose.yml down
